apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: {{ .Release.Name  | quote }}
    heritage: {{ .Release.Service  | quote }}
    version: {{ .Values.image.tag | quote }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
        release: {{ .Release.Name  | quote }}
        heritage: {{ .Release.Service  | quote }}
        version: {{ .Values.image.tag | quote }}
    spec:
      containers:
        - name: {{ template "fullname" . }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{default "Always" .Values.image.pullPolicy}}
          ports:
            - containerPort: 80
              name: http
          env:
          - name: POSTGRES_SERVER
            value: {{ ( .Values.postgresql | default dict ).server | default (printf "%s-postgresql" ( .Release.Name )) | quote }}
          - name: POSTGRES_USERNAME
            value: {{ (.Values.postgresql | default dict ).postgresUsername | default "postgres" | quote }}
          - name: POSTGRES_PASSWORD
            value: {{ (.Values.postgresql | default dict ).postgresqlPassword | default "postgres" | quote }}
  strategy:
    canary:
      canaryService: {{ template "fullname" . }}-preview
      metrics:
        - name: curl-{{ template "fullname" . }}
          provider:
            job:
              metadata:
                labels:
                  app: {{ template "fullname" . }}
                  chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
                  release: {{ .Release.Name  | quote }}
                  heritage: {{ .Release.Service  | quote }}
                  version: {{ .Values.image.tag | quote }}
              spec:
                backoffLimit: 1
                template:
                  spec:
                    containers:
                    - name: curl-{{ template "fullname" . }}
                      image: curlimages/curl:latest
                      command:
                        - /bin/sh
                        - -c
                        - |
                          curl -I https://www.baidu.com
                          status_code=$(curl --write-out "%{http_code}\n" --silent --output /dev/null "http://{{ template "fullname" . }}-preview.{{ .Release.Namespace  | quote }}.svc.cluster.local");
                          [ $status_code -eq 200 ]
                    restartPolicy: Never
      steps:
      - setWeight: 20
      - pause: {}
      - setWeight: 40
      - pause: {duration: 10}
      - setWeight: 60
      - pause: {duration: 10}
      - setWeight: 80
      - pause: {duration: 10}
      trafficRouting:
        alb:
          # The referenced ingress will be injected with a custom action annotation, directing
          # the AWS Load Balancer Controller to split traffic between the canary and stable
          # Service, according to the desired traffic weight (required).
          ingress: {{ template "fullname" . }}
          # Service port is the port which the Service listens on (required).
          servicePort: 80