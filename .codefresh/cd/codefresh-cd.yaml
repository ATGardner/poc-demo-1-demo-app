version: '1.0'

hooks:
  on_elected:
    exec:
      image: quay.io/codefresh/cli
      shell: bash
      commands:
        - |-
          export BUILDS_FOR_PR=$(codefresh get builds --pipeline-name="Codefresh Demo Application/helm-promotion" --commit-id ${{CF_COMMIT_SHA}} -o yaml)
          echo $BUILDS_FOR_PR    
          if [ "$BUILDS_FOR_PR" =~ .*"pending".* ] ; then
              echo "PR Dependency Builds Not Completed.  Terminating this build.  New build will be created by in progress dependency build."
              codefresh terminate ${{CF_BUILD_ID}}
          fi
          if [ "$BUILDS_FOR_PR" =~ .*"running".* ] ; then
              echo "PR Dependency Builds Not Completed.  Terminating this build.  New build will be created by in progress dependency build."
              codefresh terminate ${{CF_BUILD_ID}} 
          fi

stages:
  - "Clone Environments Repo"
  - "Deploy To Development"
  - "Deploy To QA"
  - "Production Approval"
  - "Deploy To Production"
steps:

  GITClone:
    title: Cloning main repository...
    type: git-clone
    repo: 'salesdemocf/poc-demo-1-environments'
    revision: 'main'
    git: salesdemocf
    stage: "Clone Environments Repo"
  
  DeployToDevelopment:
    title: Upgrading Development...
    type: helm
    arguments:
      action: install
      chart_name: ${{CHART_NAME}}
      chart_version: ${{RELEASE_CANDIDATE}}
      release_name: eva-dev
      helm_version: 3.9.0
      kube_context: poc-demo-1
      namespace: cf-demo-app-dev
      helm_repository_context: codedev-artifactory
      skip_cf_stable_helm_repo: true
      credentials_in_arguments: true
      custom_value_files:
        - /codefresh/volume/poc-demo-1-environments/eva/development/values.yaml
    stage: "Deploy To Development"
  RunDVTSOnDevelopment:
    title: Testing Development...
    type: codefresh-run
    arguments:
      PIPELINE_ID: "Codefresh Demo Application/codefresh-demo-app-dvts"
      TRIGGER_ID: dvts
      BRANCH: main
      SHA: ${{CF_REVISION}}
      ENABLE_NOTIFICATIONS: true
      CONTEXT:
        - salesdemocf
      VARIABLE:
        - KUBE_CONTEXT=poc-demo-1
        - RELEASE_NAME=eva-dev
        - NAMESPACE=cf-demo-app-dev
        - TEST_IMAGE=${{ARTIFACTORY_REGISTRY}}/tests:${{RELEASE_CANDIDATE_IMAGE_TAG}}
    stage: "Deploy To Development"
    
  DeployToQA:
    title: Upgrading QA...
    type: helm
    arguments:
      action: install
      chart_name: ${{CHART_NAME}}
      chart_version: ${{RELEASE_CANDIDATE}}
      release_name: eva-qa
      helm_version: 3.9.0
      kube_context: poc-demo-1
      namespace: cf-demo-app-qa
      helm_repository_context: codedev-artifactory
      skip_cf_stable_helm_repo: true
      credentials_in_arguments: true
      custom_value_files:
        - /codefresh/volume/poc-demo-1-environments/eva/qa/values.yaml
    stage: "Deploy To QA"
  RunDVTSOnQA:
    title: Testing QA...
    type: codefresh-run
    arguments:
      PIPELINE_ID: "Codefresh Demo Application/codefresh-demo-app-dvts"
      TRIGGER_ID: dvts
      BRANCH: main
      SHA: ${{CF_REVISION}}
      ENABLE_NOTIFICATIONS: true
      CONTEXT:
        - salesdemocf
      VARIABLE:
        - KUBE_CONTEXT=poc-demo-1
        - RELEASE_NAME=eva-qa
        - NAMESPACE=cf-demo-app-qa
        - TEST_IMAGE=${{ARTIFACTORY_REGISTRY}}/tests:${{RELEASE_CANDIDATE_IMAGE_TAG}}
    stage: "Deploy To QA"
  
  ApproveProductionDeployment:
    type: pending-approval
    title: Waiting for Production Approval...
    stage: "Production Approval"
  
  DeployToProduction:
    title: Upgrading Production...
    type: helm
    arguments:
      action: install
      chart_name: ${{CHART_NAME}}
      chart_version: ${{RELEASE_CANDIDATE}}
      release_name: eva-prod
      helm_version: 3.9.0
      kube_context: poc-demo-1
      namespace: cf-demo-app-prod
      helm_repository_context: codedev-artifactory
      skip_cf_stable_helm_repo: true
      credentials_in_arguments: true
      custom_value_files:
        - /codefresh/volume/poc-demo-1-environments/eva/production/values.yaml
    stage: "Deploy To Production"
  RunDVTSOnProduction:
    title: Testing Production...
    type: codefresh-run
    arguments:
      PIPELINE_ID: "Codefresh Demo Application/codefresh-demo-app-dvts"
      TRIGGER_ID: dvts
      BRANCH: main
      SHA: ${{CF_REVISION}}
      ENABLE_NOTIFICATIONS: true
      CONTEXT:
        - salesdemocf
      VARIABLE:
        - KUBE_CONTEXT=poc-demo-1
        - RELEASE_NAME=eva-prod
        - NAMESPACE=cf-demo-app-prod
        - TEST_IMAGE=${{ARTIFACTORY_REGISTRY}}/tests:${{RELEASE_CANDIDATE_IMAGE_TAG}}
    stage: "Deploy To Production"
